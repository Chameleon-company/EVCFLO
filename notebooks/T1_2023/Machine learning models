{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "01426d53",
      "metadata": {
        "id": "01426d53"
      },
      "source": [
        "\n",
        "#### 1.1 Importing the necessary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c138d670",
      "metadata": {
        "id": "c138d670"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from xgboost import XGBRegressor\n",
        "from sklearn.metrics import mean_squared_error, r2_score\n",
        "from sklearn.impute import SimpleImputer\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "474e6d98",
      "metadata": {
        "id": "474e6d98"
      },
      "source": [
        "#### 1.2 Loading our Australian_EV_Charging_Stations dataset\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "060db26c",
      "metadata": {
        "id": "060db26c"
      },
      "outputs": [],
      "source": [
        "df = pd.read_csv(\"../datasets/Australian_EV_Charging_Stations.csv\", index_col=False)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "863b854a",
      "metadata": {
        "id": "863b854a"
      },
      "source": [
        "#### 1.3 Viewing the top  of the datasets using head(5)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "b38df347",
      "metadata": {
        "id": "b38df347",
        "outputId": "54afe4ea-af1f-43ab-a692-42385aea4116"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Location Name</th>\n",
              "      <th>Latitude</th>\n",
              "      <th>Longitude</th>\n",
              "      <th>Address</th>\n",
              "      <th>Description</th>\n",
              "      <th>Plugs_wall_AU/NZ</th>\n",
              "      <th>Plugs_CHAdeMO</th>\n",
              "      <th>Plugs_CCS/SAE</th>\n",
              "      <th>Plugs_Tesla</th>\n",
              "      <th>...</th>\n",
              "      <th>Power 2</th>\n",
              "      <th>Location_category</th>\n",
              "      <th>charging_stations</th>\n",
              "      <th>payment</th>\n",
              "      <th>Plugs_Caravan_Mains_Socket</th>\n",
              "      <th>Plugs_Three_Phase</th>\n",
              "      <th>Plugs_Commando</th>\n",
              "      <th>Plugs_Other</th>\n",
              "      <th>State</th>\n",
              "      <th>Town</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>Gatton</td>\n",
              "      <td>-27.551404</td>\n",
              "      <td>152.335073</td>\n",
              "      <td>Building 8156, The University of Queensland, M...</td>\n",
              "      <td>University of Queensland Gatton Veterinary Hos...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Commercial</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>Cairns</td>\n",
              "      <td>-16.920457</td>\n",
              "      <td>145.778873</td>\n",
              "      <td>1 Pier Point Rd, Cairns City QLD 4870, Australia</td>\n",
              "      <td>Lagoon car park (between the Esplanade and Pie...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>Rockhampton</td>\n",
              "      <td>-23.382272</td>\n",
              "      <td>150.513462</td>\n",
              "      <td>172-189 Alma St, Rockhampton City QLD 4700, Au...</td>\n",
              "      <td>Alma St carpark of council building.</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>Coolangatta</td>\n",
              "      <td>-28.164197</td>\n",
              "      <td>153.515274</td>\n",
              "      <td>1 Eastern Ave, Bilinga 4225</td>\n",
              "      <td>Gold Coast Airport. Carparks near northbound s...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>Hamilton</td>\n",
              "      <td>-27.444492</td>\n",
              "      <td>153.083611</td>\n",
              "      <td>North Shore Hamilton\\n281 MacArthur Ave, Hamil...</td>\n",
              "      <td>Eat St carpark, near roundabout at end of Maca...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows Ã— 23 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0 Location Name   Latitude   Longitude   \n",
              "0           0        Gatton -27.551404  152.335073  \\\n",
              "1           1        Cairns -16.920457  145.778873   \n",
              "2           2   Rockhampton -23.382272  150.513462   \n",
              "3           3   Coolangatta -28.164197  153.515274   \n",
              "4           4      Hamilton -27.444492  153.083611   \n",
              "\n",
              "                                             Address   \n",
              "0  Building 8156, The University of Queensland, M...  \\\n",
              "1   1 Pier Point Rd, Cairns City QLD 4870, Australia   \n",
              "2  172-189 Alma St, Rockhampton City QLD 4700, Au...   \n",
              "3                        1 Eastern Ave, Bilinga 4225   \n",
              "4  North Shore Hamilton\\n281 MacArthur Ave, Hamil...   \n",
              "\n",
              "                                         Description  Plugs_wall_AU/NZ   \n",
              "0  University of Queensland Gatton Veterinary Hos...               1.0  \\\n",
              "1  Lagoon car park (between the Esplanade and Pie...               0.0   \n",
              "2               Alma St carpark of council building.               0.0   \n",
              "3  Gold Coast Airport. Carparks near northbound s...               0.0   \n",
              "4  Eat St carpark, near roundabout at end of Maca...               0.0   \n",
              "\n",
              "   Plugs_CHAdeMO  Plugs_CCS/SAE  Plugs_Tesla  ... Power 2  Location_category    \n",
              "0            1.0            1.0          1.0  ...      22          Commercial  \\\n",
              "1            1.0            1.0          0.0  ...      22              Public   \n",
              "2            1.0            1.0          0.0  ...      22              Public   \n",
              "3            1.0            1.0          0.0  ...      22              Public   \n",
              "4            2.0            2.0          0.0  ...      22              Public   \n",
              "\n",
              "  charging_stations payment Plugs_Caravan_Mains_Socket  Plugs_Three_Phase   \n",
              "0               4.0     0.2                        0.0                0.0  \\\n",
              "1               3.0     0.3                        0.0                0.0   \n",
              "2               3.0     0.2                        0.0                0.0   \n",
              "3               3.0     0.3                        0.0                0.0   \n",
              "4               5.0     0.3                        0.0                0.0   \n",
              "\n",
              "  Plugs_Commando  Plugs_Other  State  Town  \n",
              "0            0.0          0.0    NaN   NaN  \n",
              "1            0.0          0.0    NaN   NaN  \n",
              "2            0.0          0.0    NaN   NaN  \n",
              "3            0.0          0.0    NaN   NaN  \n",
              "4            0.0          0.0    NaN   NaN  \n",
              "\n",
              "[5 rows x 23 columns]"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.head(5)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3f081f44",
      "metadata": {
        "id": "3f081f44"
      },
      "source": [
        "#### 1.4 Viewing the columns of datasets"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7faac0bb",
      "metadata": {
        "id": "7faac0bb",
        "outputId": "78cbcfc9-2982-412c-f21b-f3d5052ea247"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['Unnamed: 0', 'Location Name', 'Latitude', 'Longitude', 'Address',\n",
              "       'Description', 'Plugs_wall_AU/NZ', 'Plugs_CHAdeMO', 'Plugs_CCS/SAE',\n",
              "       'Plugs_Tesla', 'Plugs_J-1772', 'Plugs_Type2', 'Power 1', 'Power 2',\n",
              "       'Location_category ', 'charging_stations', 'payment',\n",
              "       'Plugs_Caravan_Mains_Socket', 'Plugs_Three_Phase', 'Plugs_Commando',\n",
              "       'Plugs_Other', 'State', 'Town'],\n",
              "      dtype='object')"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.columns\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6e6709ed",
      "metadata": {
        "id": "6e6709ed"
      },
      "source": [
        "#### 1.5 Checking for missing value"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6352ebb6",
      "metadata": {
        "id": "6352ebb6",
        "outputId": "68ee4b5d-0c7e-4a8b-82ee-21f22c8e5918"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Unnamed: 0                      0\n",
              "Location Name                   0\n",
              "Latitude                        0\n",
              "Longitude                       0\n",
              "Address                         0\n",
              "Description                   324\n",
              "Plugs_wall_AU/NZ               73\n",
              "Plugs_CHAdeMO                  18\n",
              "Plugs_CCS/SAE                  17\n",
              "Plugs_Tesla                    40\n",
              "Plugs_J-1772                   73\n",
              "Plugs_Type2                    30\n",
              "Power 1                        55\n",
              "Power 2                       292\n",
              "Location_category             324\n",
              "charging_stations              74\n",
              "payment                       304\n",
              "Plugs_Caravan_Mains_Socket     74\n",
              "Plugs_Three_Phase              73\n",
              "Plugs_Commando                324\n",
              "Plugs_Other                   299\n",
              "State                         371\n",
              "Town                          366\n",
              "dtype: int64"
            ]
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.isnull().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f9aaa101",
      "metadata": {
        "id": "f9aaa101"
      },
      "source": [
        "#### 1.6 Calculating the descriptive statistics"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c3484ed1",
      "metadata": {
        "id": "c3484ed1",
        "outputId": "a1cfffd5-992b-4679-aa36-2aff1466eae2"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Latitude</th>\n",
              "      <th>Longitude</th>\n",
              "      <th>Plugs_wall_AU/NZ</th>\n",
              "      <th>Plugs_CHAdeMO</th>\n",
              "      <th>Plugs_CCS/SAE</th>\n",
              "      <th>Plugs_Tesla</th>\n",
              "      <th>Plugs_Type2</th>\n",
              "      <th>charging_stations</th>\n",
              "      <th>Plugs_Caravan_Mains_Socket</th>\n",
              "      <th>Plugs_Three_Phase</th>\n",
              "      <th>Plugs_Commando</th>\n",
              "      <th>Plugs_Other</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>391.000000</td>\n",
              "      <td>391.000000</td>\n",
              "      <td>391.000000</td>\n",
              "      <td>318.000000</td>\n",
              "      <td>373.000000</td>\n",
              "      <td>374.000000</td>\n",
              "      <td>351.000000</td>\n",
              "      <td>361.000000</td>\n",
              "      <td>317.000000</td>\n",
              "      <td>317.000000</td>\n",
              "      <td>318.000000</td>\n",
              "      <td>67.0</td>\n",
              "      <td>92.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>87.549872</td>\n",
              "      <td>-36.212610</td>\n",
              "      <td>145.253397</td>\n",
              "      <td>0.446541</td>\n",
              "      <td>0.375335</td>\n",
              "      <td>0.414439</td>\n",
              "      <td>0.541311</td>\n",
              "      <td>1.232687</td>\n",
              "      <td>2.899054</td>\n",
              "      <td>0.003155</td>\n",
              "      <td>0.025157</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.010870</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>76.681539</td>\n",
              "      <td>5.167271</td>\n",
              "      <td>1.333809</td>\n",
              "      <td>1.856518</td>\n",
              "      <td>0.805647</td>\n",
              "      <td>0.903912</td>\n",
              "      <td>1.170044</td>\n",
              "      <td>1.979376</td>\n",
              "      <td>2.708852</td>\n",
              "      <td>0.056166</td>\n",
              "      <td>0.208636</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.104257</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>-38.522528</td>\n",
              "      <td>142.222919</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>19.000000</td>\n",
              "      <td>-37.925594</td>\n",
              "      <td>144.923857</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>60.000000</td>\n",
              "      <td>-37.818612</td>\n",
              "      <td>144.983228</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>151.500000</td>\n",
              "      <td>-37.717484</td>\n",
              "      <td>145.146020</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>249.000000</td>\n",
              "      <td>-16.474254</td>\n",
              "      <td>153.515274</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Unnamed: 0    Latitude   Longitude  Plugs_wall_AU/NZ  Plugs_CHAdeMO   \n",
              "count  391.000000  391.000000  391.000000        318.000000     373.000000  \\\n",
              "mean    87.549872  -36.212610  145.253397          0.446541       0.375335   \n",
              "std     76.681539    5.167271    1.333809          1.856518       0.805647   \n",
              "min      0.000000  -38.522528  142.222919          0.000000       0.000000   \n",
              "25%     19.000000  -37.925594  144.923857          0.000000       0.000000   \n",
              "50%     60.000000  -37.818612  144.983228          0.000000       0.000000   \n",
              "75%    151.500000  -37.717484  145.146020          0.000000       0.000000   \n",
              "max    249.000000  -16.474254  153.515274         21.000000       4.000000   \n",
              "\n",
              "       Plugs_CCS/SAE  Plugs_Tesla  Plugs_Type2  charging_stations   \n",
              "count     374.000000   351.000000   361.000000         317.000000  \\\n",
              "mean        0.414439     0.541311     1.232687           2.899054   \n",
              "std         0.903912     1.170044     1.979376           2.708852   \n",
              "min         0.000000     0.000000     0.000000           1.000000   \n",
              "25%         0.000000     0.000000     0.000000           1.000000   \n",
              "50%         0.000000     0.000000     0.000000           2.000000   \n",
              "75%         1.000000     0.000000     2.000000           3.000000   \n",
              "max         6.000000     6.000000    16.000000          21.000000   \n",
              "\n",
              "       Plugs_Caravan_Mains_Socket  Plugs_Three_Phase  Plugs_Commando   \n",
              "count                  317.000000         318.000000            67.0  \\\n",
              "mean                     0.003155           0.025157             0.0   \n",
              "std                      0.056166           0.208636             0.0   \n",
              "min                      0.000000           0.000000             0.0   \n",
              "25%                      0.000000           0.000000             0.0   \n",
              "50%                      0.000000           0.000000             0.0   \n",
              "75%                      0.000000           0.000000             0.0   \n",
              "max                      1.000000           3.000000             0.0   \n",
              "\n",
              "       Plugs_Other  \n",
              "count    92.000000  \n",
              "mean      0.010870  \n",
              "std       0.104257  \n",
              "min       0.000000  \n",
              "25%       0.000000  \n",
              "50%       0.000000  \n",
              "75%       0.000000  \n",
              "max       1.000000  "
            ]
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fd481d63",
      "metadata": {
        "id": "fd481d63"
      },
      "source": [
        "#### 1.7 Removing the \"Unnamed\" column "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8966c5bc",
      "metadata": {
        "id": "8966c5bc",
        "outputId": "cb003958-0b5b-4ef7-ab83-7fa6e9c3924c"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Location Name</th>\n",
              "      <th>Latitude</th>\n",
              "      <th>Longitude</th>\n",
              "      <th>Address</th>\n",
              "      <th>Description</th>\n",
              "      <th>Plugs_wall_AU/NZ</th>\n",
              "      <th>Plugs_CHAdeMO</th>\n",
              "      <th>Plugs_CCS/SAE</th>\n",
              "      <th>Plugs_Tesla</th>\n",
              "      <th>Plugs_J-1772</th>\n",
              "      <th>...</th>\n",
              "      <th>Power 2</th>\n",
              "      <th>Location_category</th>\n",
              "      <th>charging_stations</th>\n",
              "      <th>payment</th>\n",
              "      <th>Plugs_Caravan_Mains_Socket</th>\n",
              "      <th>Plugs_Three_Phase</th>\n",
              "      <th>Plugs_Commando</th>\n",
              "      <th>Plugs_Other</th>\n",
              "      <th>State</th>\n",
              "      <th>Town</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Gatton</td>\n",
              "      <td>-27.551404</td>\n",
              "      <td>152.335073</td>\n",
              "      <td>Building 8156, The University of Queensland, M...</td>\n",
              "      <td>University of Queensland Gatton Veterinary Hos...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Commercial</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Cairns</td>\n",
              "      <td>-16.920457</td>\n",
              "      <td>145.778873</td>\n",
              "      <td>1 Pier Point Rd, Cairns City QLD 4870, Australia</td>\n",
              "      <td>Lagoon car park (between the Esplanade and Pie...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Rockhampton</td>\n",
              "      <td>-23.382272</td>\n",
              "      <td>150.513462</td>\n",
              "      <td>172-189 Alma St, Rockhampton City QLD 4700, Au...</td>\n",
              "      <td>Alma St carpark of council building.</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Coolangatta</td>\n",
              "      <td>-28.164197</td>\n",
              "      <td>153.515274</td>\n",
              "      <td>1 Eastern Ave, Bilinga 4225</td>\n",
              "      <td>Gold Coast Airport. Carparks near northbound s...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hamilton</td>\n",
              "      <td>-27.444492</td>\n",
              "      <td>153.083611</td>\n",
              "      <td>North Shore Hamilton\\n281 MacArthur Ave, Hamil...</td>\n",
              "      <td>Eat St carpark, near roundabout at end of Maca...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>22</td>\n",
              "      <td>Public</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>Electric Vehicle Charging Station</td>\n",
              "      <td>-36.385785</td>\n",
              "      <td>145.396965</td>\n",
              "      <td>530 Wyndham St</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Shepparton</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-35.940484</td>\n",
              "      <td>144.725516</td>\n",
              "      <td>438 High St</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Echuca</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-36.369848</td>\n",
              "      <td>145.361899</td>\n",
              "      <td>77 Midland Hwy</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Mooroopna</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>Chargefox Charging Station</td>\n",
              "      <td>-35.726720</td>\n",
              "      <td>145.659354</td>\n",
              "      <td>154 Campbell Rd</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Cobram</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>Tesla Destination Charger</td>\n",
              "      <td>-36.026226</td>\n",
              "      <td>146.459045</td>\n",
              "      <td>217 Main St</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rutherglen</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>391 rows Ã— 22 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         Location Name   Latitude   Longitude   \n",
              "0                               Gatton -27.551404  152.335073  \\\n",
              "1                               Cairns -16.920457  145.778873   \n",
              "2                          Rockhampton -23.382272  150.513462   \n",
              "3                          Coolangatta -28.164197  153.515274   \n",
              "4                             Hamilton -27.444492  153.083611   \n",
              "..                                 ...        ...         ...   \n",
              "386  Electric Vehicle Charging Station -36.385785  145.396965   \n",
              "387              Evie Charging Station -35.940484  144.725516   \n",
              "388              Evie Charging Station -36.369848  145.361899   \n",
              "389         Chargefox Charging Station -35.726720  145.659354   \n",
              "390          Tesla Destination Charger -36.026226  146.459045   \n",
              "\n",
              "                                               Address   \n",
              "0    Building 8156, The University of Queensland, M...  \\\n",
              "1     1 Pier Point Rd, Cairns City QLD 4870, Australia   \n",
              "2    172-189 Alma St, Rockhampton City QLD 4700, Au...   \n",
              "3                          1 Eastern Ave, Bilinga 4225   \n",
              "4    North Shore Hamilton\\n281 MacArthur Ave, Hamil...   \n",
              "..                                                 ...   \n",
              "386                                     530 Wyndham St   \n",
              "387                                        438 High St   \n",
              "388                                     77 Midland Hwy   \n",
              "389                                    154 Campbell Rd   \n",
              "390                                        217 Main St   \n",
              "\n",
              "                                           Description  Plugs_wall_AU/NZ   \n",
              "0    University of Queensland Gatton Veterinary Hos...               1.0  \\\n",
              "1    Lagoon car park (between the Esplanade and Pie...               0.0   \n",
              "2                 Alma St carpark of council building.               0.0   \n",
              "3    Gold Coast Airport. Carparks near northbound s...               0.0   \n",
              "4    Eat St carpark, near roundabout at end of Maca...               0.0   \n",
              "..                                                 ...               ...   \n",
              "386                                                NaN               NaN   \n",
              "387                                                NaN               NaN   \n",
              "388                                                NaN               NaN   \n",
              "389                                                NaN               NaN   \n",
              "390                                                NaN               NaN   \n",
              "\n",
              "     Plugs_CHAdeMO  Plugs_CCS/SAE  Plugs_Tesla Plugs_J-1772  ...  Power 2   \n",
              "0              1.0            1.0          1.0            0  ...       22  \\\n",
              "1              1.0            1.0          0.0            0  ...       22   \n",
              "2              1.0            1.0          0.0            0  ...       22   \n",
              "3              1.0            1.0          0.0            0  ...       22   \n",
              "4              2.0            2.0          0.0            0  ...       22   \n",
              "..             ...            ...          ...          ...  ...      ...   \n",
              "386            0.0            0.0          0.0          NaN  ...      NaN   \n",
              "387            1.0            1.0          0.0          NaN  ...      NaN   \n",
              "388            1.0            1.0          0.0          NaN  ...      NaN   \n",
              "389            0.0            0.0          0.0          NaN  ...      NaN   \n",
              "390            0.0            0.0          1.0          NaN  ...      NaN   \n",
              "\n",
              "    Location_category  charging_stations payment  Plugs_Caravan_Mains_Socket   \n",
              "0           Commercial               4.0     0.2                         0.0  \\\n",
              "1               Public               3.0     0.3                         0.0   \n",
              "2               Public               3.0     0.2                         0.0   \n",
              "3               Public               3.0     0.3                         0.0   \n",
              "4               Public               5.0     0.3                         0.0   \n",
              "..                 ...               ...     ...                         ...   \n",
              "386                NaN               NaN     NaN                         NaN   \n",
              "387                NaN               NaN     NaN                         NaN   \n",
              "388                NaN               NaN     NaN                         NaN   \n",
              "389                NaN               NaN     NaN                         NaN   \n",
              "390                NaN               NaN     NaN                         NaN   \n",
              "\n",
              "    Plugs_Three_Phase  Plugs_Commando  Plugs_Other  State        Town  \n",
              "0                 0.0             0.0          0.0    NaN         NaN  \n",
              "1                 0.0             0.0          0.0    NaN         NaN  \n",
              "2                 0.0             0.0          0.0    NaN         NaN  \n",
              "3                 0.0             0.0          0.0    NaN         NaN  \n",
              "4                 0.0             0.0          0.0    NaN         NaN  \n",
              "..                ...             ...          ...    ...         ...  \n",
              "386               NaN             NaN          0.0    NaN  Shepparton  \n",
              "387               NaN             NaN          0.0    NaN      Echuca  \n",
              "388               NaN             NaN          0.0    NaN   Mooroopna  \n",
              "389               NaN             NaN          0.0    NaN      Cobram  \n",
              "390               NaN             NaN          0.0    NaN  Rutherglen  \n",
              "\n",
              "[391 rows x 22 columns]"
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df = df.drop(columns=['Unnamed: 0'])\n",
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b65542bc",
      "metadata": {
        "id": "b65542bc"
      },
      "source": [
        "#### 1.8 Filling the missing values for plug types with zeros"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c4c213af",
      "metadata": {
        "id": "c4c213af"
      },
      "outputs": [],
      "source": [
        "plug_cols = ['Plugs_wall_AU/NZ', 'Plugs_CHAdeMO', 'Plugs_CCS/SAE', 'Plugs_Tesla', 'Plugs_J-1772', 'Plugs_Type2', 'Plugs_Caravan_Mains_Socket', 'Plugs_Three_Phase', 'Plugs_Commando', 'Plugs_Other']\n",
        "df[plug_cols] = df[plug_cols].fillna(0)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "95c2c56b",
      "metadata": {
        "id": "95c2c56b"
      },
      "source": [
        "#### 1.9 Filling missing values for payment with \"unknown\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "10857cdb",
      "metadata": {
        "id": "10857cdb"
      },
      "outputs": [],
      "source": [
        "df['payment'] = df['payment'].fillna('unknown')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "cad18809",
      "metadata": {
        "id": "cad18809"
      },
      "source": [
        "#### 1.9 Drop columns with a large number of missing values"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "97ce475c",
      "metadata": {
        "id": "97ce475c"
      },
      "outputs": [],
      "source": [
        "df = df.drop(['Description', 'Location_category ', 'State', 'Town'], axis=1)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "50c16354",
      "metadata": {
        "id": "50c16354"
      },
      "source": [
        "#### 1.9.1 Check for duplicate rows\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "b59e0b7b",
      "metadata": {
        "id": "b59e0b7b",
        "outputId": "12326bb3-a2f6-4c74-b070-5abece7005cc"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.duplicated().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0fce3c24",
      "metadata": {
        "id": "0fce3c24"
      },
      "source": [
        "#### 2.0 Viewing the Australian_EV_Charging_Stations datasets"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d00f9bf0",
      "metadata": {
        "id": "d00f9bf0",
        "outputId": "d920675f-6f34-477e-f2e8-3a2a40b1e9d3"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Location Name</th>\n",
              "      <th>Latitude</th>\n",
              "      <th>Longitude</th>\n",
              "      <th>Address</th>\n",
              "      <th>Plugs_wall_AU/NZ</th>\n",
              "      <th>Plugs_CHAdeMO</th>\n",
              "      <th>Plugs_CCS/SAE</th>\n",
              "      <th>Plugs_Tesla</th>\n",
              "      <th>Plugs_J-1772</th>\n",
              "      <th>Plugs_Type2</th>\n",
              "      <th>Power 1</th>\n",
              "      <th>Power 2</th>\n",
              "      <th>charging_stations</th>\n",
              "      <th>payment</th>\n",
              "      <th>Plugs_Caravan_Mains_Socket</th>\n",
              "      <th>Plugs_Three_Phase</th>\n",
              "      <th>Plugs_Commando</th>\n",
              "      <th>Plugs_Other</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Gatton</td>\n",
              "      <td>-27.551404</td>\n",
              "      <td>152.335073</td>\n",
              "      <td>Building 8156, The University of Queensland, M...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>50</td>\n",
              "      <td>22</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Cairns</td>\n",
              "      <td>-16.920457</td>\n",
              "      <td>145.778873</td>\n",
              "      <td>1 Pier Point Rd, Cairns City QLD 4870, Australia</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50</td>\n",
              "      <td>22</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Rockhampton</td>\n",
              "      <td>-23.382272</td>\n",
              "      <td>150.513462</td>\n",
              "      <td>172-189 Alma St, Rockhampton City QLD 4700, Au...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50</td>\n",
              "      <td>22</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Coolangatta</td>\n",
              "      <td>-28.164197</td>\n",
              "      <td>153.515274</td>\n",
              "      <td>1 Eastern Ave, Bilinga 4225</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50</td>\n",
              "      <td>22</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hamilton</td>\n",
              "      <td>-27.444492</td>\n",
              "      <td>153.083611</td>\n",
              "      <td>North Shore Hamilton\\n281 MacArthur Ave, Hamil...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50</td>\n",
              "      <td>22</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>Electric Vehicle Charging Station</td>\n",
              "      <td>-36.385785</td>\n",
              "      <td>145.396965</td>\n",
              "      <td>530 Wyndham St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-35.940484</td>\n",
              "      <td>144.725516</td>\n",
              "      <td>438 High St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-36.369848</td>\n",
              "      <td>145.361899</td>\n",
              "      <td>77 Midland Hwy</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>Chargefox Charging Station</td>\n",
              "      <td>-35.726720</td>\n",
              "      <td>145.659354</td>\n",
              "      <td>154 Campbell Rd</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>Tesla Destination Charger</td>\n",
              "      <td>-36.026226</td>\n",
              "      <td>146.459045</td>\n",
              "      <td>217 Main St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>391 rows Ã— 18 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         Location Name   Latitude   Longitude   \n",
              "0                               Gatton -27.551404  152.335073  \\\n",
              "1                               Cairns -16.920457  145.778873   \n",
              "2                          Rockhampton -23.382272  150.513462   \n",
              "3                          Coolangatta -28.164197  153.515274   \n",
              "4                             Hamilton -27.444492  153.083611   \n",
              "..                                 ...        ...         ...   \n",
              "386  Electric Vehicle Charging Station -36.385785  145.396965   \n",
              "387              Evie Charging Station -35.940484  144.725516   \n",
              "388              Evie Charging Station -36.369848  145.361899   \n",
              "389         Chargefox Charging Station -35.726720  145.659354   \n",
              "390          Tesla Destination Charger -36.026226  146.459045   \n",
              "\n",
              "                                               Address  Plugs_wall_AU/NZ   \n",
              "0    Building 8156, The University of Queensland, M...               1.0  \\\n",
              "1     1 Pier Point Rd, Cairns City QLD 4870, Australia               0.0   \n",
              "2    172-189 Alma St, Rockhampton City QLD 4700, Au...               0.0   \n",
              "3                          1 Eastern Ave, Bilinga 4225               0.0   \n",
              "4    North Shore Hamilton\\n281 MacArthur Ave, Hamil...               0.0   \n",
              "..                                                 ...               ...   \n",
              "386                                     530 Wyndham St               0.0   \n",
              "387                                        438 High St               0.0   \n",
              "388                                     77 Midland Hwy               0.0   \n",
              "389                                    154 Campbell Rd               0.0   \n",
              "390                                        217 Main St               0.0   \n",
              "\n",
              "     Plugs_CHAdeMO  Plugs_CCS/SAE  Plugs_Tesla Plugs_J-1772  Plugs_Type2   \n",
              "0              1.0            1.0          1.0            0          0.0  \\\n",
              "1              1.0            1.0          0.0            0          2.0   \n",
              "2              1.0            1.0          0.0            0          2.0   \n",
              "3              1.0            1.0          0.0            0          2.0   \n",
              "4              2.0            2.0          0.0            0          2.0   \n",
              "..             ...            ...          ...          ...          ...   \n",
              "386            0.0            0.0          0.0            0          1.0   \n",
              "387            1.0            1.0          0.0            0          0.0   \n",
              "388            1.0            1.0          0.0            0          0.0   \n",
              "389            0.0            0.0          0.0            0          1.0   \n",
              "390            0.0            0.0          1.0            0          0.0   \n",
              "\n",
              "    Power 1 Power 2  charging_stations  payment  Plugs_Caravan_Mains_Socket   \n",
              "0        50      22                4.0      0.2                         0.0  \\\n",
              "1        50      22                3.0      0.3                         0.0   \n",
              "2        50      22                3.0      0.2                         0.0   \n",
              "3        50      22                3.0      0.3                         0.0   \n",
              "4        50      22                5.0      0.3                         0.0   \n",
              "..      ...     ...                ...      ...                         ...   \n",
              "386     NaN     NaN                NaN  unknown                         0.0   \n",
              "387     NaN     NaN                NaN  unknown                         0.0   \n",
              "388     NaN     NaN                NaN  unknown                         0.0   \n",
              "389     NaN     NaN                NaN  unknown                         0.0   \n",
              "390     NaN     NaN                NaN  unknown                         0.0   \n",
              "\n",
              "     Plugs_Three_Phase  Plugs_Commando  Plugs_Other  \n",
              "0                  0.0             0.0          0.0  \n",
              "1                  0.0             0.0          0.0  \n",
              "2                  0.0             0.0          0.0  \n",
              "3                  0.0             0.0          0.0  \n",
              "4                  0.0             0.0          0.0  \n",
              "..                 ...             ...          ...  \n",
              "386                0.0             0.0          0.0  \n",
              "387                0.0             0.0          0.0  \n",
              "388                0.0             0.0          0.0  \n",
              "389                0.0             0.0          0.0  \n",
              "390                0.0             0.0          0.0  \n",
              "\n",
              "[391 rows x 18 columns]"
            ]
          },
          "execution_count": 12,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b44ff3da",
      "metadata": {
        "id": "b44ff3da"
      },
      "source": [
        "#### 2.1  Replace non-numeric values with NaN"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3c8beb1f",
      "metadata": {
        "id": "3c8beb1f"
      },
      "outputs": [],
      "source": [
        "df['Power 1'] = pd.to_numeric(df['Power 1'], errors='coerce')\n",
        "df['Power 2'] = pd.to_numeric(df['Power 2'], errors='coerce')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "cb91bbe4",
      "metadata": {
        "id": "cb91bbe4"
      },
      "source": [
        "#### 2.2 Fill NaN values with median"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0c1ef986",
      "metadata": {
        "id": "0c1ef986"
      },
      "outputs": [],
      "source": [
        "median_value = np.nanmedian(df['Power 1'])\n",
        "df['Power 1'] = df['Power 1'].fillna(median_value)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8b20ae19",
      "metadata": {
        "id": "8b20ae19"
      },
      "outputs": [],
      "source": [
        "median_value = np.nanmedian(df['Power 2'])\n",
        "df['Power 2'] = df['Power 2'].fillna(median_value)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "02c8beef",
      "metadata": {
        "id": "02c8beef"
      },
      "source": [
        "#### 2.3 Viewing the Australian_EV_Charging_Stations datasets"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c81fc8ac",
      "metadata": {
        "id": "c81fc8ac",
        "outputId": "25982e39-d246-4fb8-a5c6-06ef2bb88730"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Location Name</th>\n",
              "      <th>Latitude</th>\n",
              "      <th>Longitude</th>\n",
              "      <th>Address</th>\n",
              "      <th>Plugs_wall_AU/NZ</th>\n",
              "      <th>Plugs_CHAdeMO</th>\n",
              "      <th>Plugs_CCS/SAE</th>\n",
              "      <th>Plugs_Tesla</th>\n",
              "      <th>Plugs_J-1772</th>\n",
              "      <th>Plugs_Type2</th>\n",
              "      <th>Power 1</th>\n",
              "      <th>Power 2</th>\n",
              "      <th>charging_stations</th>\n",
              "      <th>payment</th>\n",
              "      <th>Plugs_Caravan_Mains_Socket</th>\n",
              "      <th>Plugs_Three_Phase</th>\n",
              "      <th>Plugs_Commando</th>\n",
              "      <th>Plugs_Other</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Gatton</td>\n",
              "      <td>-27.551404</td>\n",
              "      <td>152.335073</td>\n",
              "      <td>Building 8156, The University of Queensland, M...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Cairns</td>\n",
              "      <td>-16.920457</td>\n",
              "      <td>145.778873</td>\n",
              "      <td>1 Pier Point Rd, Cairns City QLD 4870, Australia</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Rockhampton</td>\n",
              "      <td>-23.382272</td>\n",
              "      <td>150.513462</td>\n",
              "      <td>172-189 Alma St, Rockhampton City QLD 4700, Au...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Coolangatta</td>\n",
              "      <td>-28.164197</td>\n",
              "      <td>153.515274</td>\n",
              "      <td>1 Eastern Ave, Bilinga 4225</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hamilton</td>\n",
              "      <td>-27.444492</td>\n",
              "      <td>153.083611</td>\n",
              "      <td>North Shore Hamilton\\n281 MacArthur Ave, Hamil...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>Electric Vehicle Charging Station</td>\n",
              "      <td>-36.385785</td>\n",
              "      <td>145.396965</td>\n",
              "      <td>530 Wyndham St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-35.940484</td>\n",
              "      <td>144.725516</td>\n",
              "      <td>438 High St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-36.369848</td>\n",
              "      <td>145.361899</td>\n",
              "      <td>77 Midland Hwy</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>Chargefox Charging Station</td>\n",
              "      <td>-35.726720</td>\n",
              "      <td>145.659354</td>\n",
              "      <td>154 Campbell Rd</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>Tesla Destination Charger</td>\n",
              "      <td>-36.026226</td>\n",
              "      <td>146.459045</td>\n",
              "      <td>217 Main St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>391 rows Ã— 18 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         Location Name   Latitude   Longitude   \n",
              "0                               Gatton -27.551404  152.335073  \\\n",
              "1                               Cairns -16.920457  145.778873   \n",
              "2                          Rockhampton -23.382272  150.513462   \n",
              "3                          Coolangatta -28.164197  153.515274   \n",
              "4                             Hamilton -27.444492  153.083611   \n",
              "..                                 ...        ...         ...   \n",
              "386  Electric Vehicle Charging Station -36.385785  145.396965   \n",
              "387              Evie Charging Station -35.940484  144.725516   \n",
              "388              Evie Charging Station -36.369848  145.361899   \n",
              "389         Chargefox Charging Station -35.726720  145.659354   \n",
              "390          Tesla Destination Charger -36.026226  146.459045   \n",
              "\n",
              "                                               Address  Plugs_wall_AU/NZ   \n",
              "0    Building 8156, The University of Queensland, M...               1.0  \\\n",
              "1     1 Pier Point Rd, Cairns City QLD 4870, Australia               0.0   \n",
              "2    172-189 Alma St, Rockhampton City QLD 4700, Au...               0.0   \n",
              "3                          1 Eastern Ave, Bilinga 4225               0.0   \n",
              "4    North Shore Hamilton\\n281 MacArthur Ave, Hamil...               0.0   \n",
              "..                                                 ...               ...   \n",
              "386                                     530 Wyndham St               0.0   \n",
              "387                                        438 High St               0.0   \n",
              "388                                     77 Midland Hwy               0.0   \n",
              "389                                    154 Campbell Rd               0.0   \n",
              "390                                        217 Main St               0.0   \n",
              "\n",
              "     Plugs_CHAdeMO  Plugs_CCS/SAE  Plugs_Tesla Plugs_J-1772  Plugs_Type2   \n",
              "0              1.0            1.0          1.0            0          0.0  \\\n",
              "1              1.0            1.0          0.0            0          2.0   \n",
              "2              1.0            1.0          0.0            0          2.0   \n",
              "3              1.0            1.0          0.0            0          2.0   \n",
              "4              2.0            2.0          0.0            0          2.0   \n",
              "..             ...            ...          ...          ...          ...   \n",
              "386            0.0            0.0          0.0            0          1.0   \n",
              "387            1.0            1.0          0.0            0          0.0   \n",
              "388            1.0            1.0          0.0            0          0.0   \n",
              "389            0.0            0.0          0.0            0          1.0   \n",
              "390            0.0            0.0          1.0            0          0.0   \n",
              "\n",
              "     Power 1  Power 2  charging_stations  payment  Plugs_Caravan_Mains_Socket   \n",
              "0       50.0     22.0                4.0      0.2                         0.0  \\\n",
              "1       50.0     22.0                3.0      0.3                         0.0   \n",
              "2       50.0     22.0                3.0      0.2                         0.0   \n",
              "3       50.0     22.0                3.0      0.3                         0.0   \n",
              "4       50.0     22.0                5.0      0.3                         0.0   \n",
              "..       ...      ...                ...      ...                         ...   \n",
              "386     22.0     22.0                NaN  unknown                         0.0   \n",
              "387     22.0     22.0                NaN  unknown                         0.0   \n",
              "388     22.0     22.0                NaN  unknown                         0.0   \n",
              "389     22.0     22.0                NaN  unknown                         0.0   \n",
              "390     22.0     22.0                NaN  unknown                         0.0   \n",
              "\n",
              "     Plugs_Three_Phase  Plugs_Commando  Plugs_Other  \n",
              "0                  0.0             0.0          0.0  \n",
              "1                  0.0             0.0          0.0  \n",
              "2                  0.0             0.0          0.0  \n",
              "3                  0.0             0.0          0.0  \n",
              "4                  0.0             0.0          0.0  \n",
              "..                 ...             ...          ...  \n",
              "386                0.0             0.0          0.0  \n",
              "387                0.0             0.0          0.0  \n",
              "388                0.0             0.0          0.0  \n",
              "389                0.0             0.0          0.0  \n",
              "390                0.0             0.0          0.0  \n",
              "\n",
              "[391 rows x 18 columns]"
            ]
          },
          "execution_count": 16,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "47e4bb54",
      "metadata": {
        "id": "47e4bb54"
      },
      "source": [
        "#### 2.4 Convert charging_stations to numeric\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a972b064",
      "metadata": {
        "id": "a972b064"
      },
      "outputs": [],
      "source": [
        "df['charging_stations'] = pd.to_numeric(df['charging_stations'], errors='coerce')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ce5427ec",
      "metadata": {
        "id": "ce5427ec"
      },
      "source": [
        "#### 2.5 Creatng a new column for wait time per charging station\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4026c628",
      "metadata": {
        "id": "4026c628"
      },
      "outputs": [],
      "source": [
        "df['wait_time'] = df['charging_stations'] * df[['Power 1', 'Power 2']].max(axis=1) / 60"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "e1e5d344",
      "metadata": {
        "id": "e1e5d344"
      },
      "source": [
        "#### 2.6 Check if the columns is added"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "12b2e1fe",
      "metadata": {
        "id": "12b2e1fe",
        "outputId": "82dc2ae6-be07-4e27-8700-e8a8ff459316"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Location Name</th>\n",
              "      <th>Latitude</th>\n",
              "      <th>Longitude</th>\n",
              "      <th>Address</th>\n",
              "      <th>Plugs_wall_AU/NZ</th>\n",
              "      <th>Plugs_CHAdeMO</th>\n",
              "      <th>Plugs_CCS/SAE</th>\n",
              "      <th>Plugs_Tesla</th>\n",
              "      <th>Plugs_J-1772</th>\n",
              "      <th>Plugs_Type2</th>\n",
              "      <th>Power 1</th>\n",
              "      <th>Power 2</th>\n",
              "      <th>charging_stations</th>\n",
              "      <th>payment</th>\n",
              "      <th>Plugs_Caravan_Mains_Socket</th>\n",
              "      <th>Plugs_Three_Phase</th>\n",
              "      <th>Plugs_Commando</th>\n",
              "      <th>Plugs_Other</th>\n",
              "      <th>wait_time</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Gatton</td>\n",
              "      <td>-27.551404</td>\n",
              "      <td>152.335073</td>\n",
              "      <td>Building 8156, The University of Queensland, M...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.333333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Cairns</td>\n",
              "      <td>-16.920457</td>\n",
              "      <td>145.778873</td>\n",
              "      <td>1 Pier Point Rd, Cairns City QLD 4870, Australia</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Rockhampton</td>\n",
              "      <td>-23.382272</td>\n",
              "      <td>150.513462</td>\n",
              "      <td>172-189 Alma St, Rockhampton City QLD 4700, Au...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Coolangatta</td>\n",
              "      <td>-28.164197</td>\n",
              "      <td>153.515274</td>\n",
              "      <td>1 Eastern Ave, Bilinga 4225</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hamilton</td>\n",
              "      <td>-27.444492</td>\n",
              "      <td>153.083611</td>\n",
              "      <td>North Shore Hamilton\\n281 MacArthur Ave, Hamil...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.3</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.166667</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>386</th>\n",
              "      <td>Electric Vehicle Charging Station</td>\n",
              "      <td>-36.385785</td>\n",
              "      <td>145.396965</td>\n",
              "      <td>530 Wyndham St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>387</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-35.940484</td>\n",
              "      <td>144.725516</td>\n",
              "      <td>438 High St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>388</th>\n",
              "      <td>Evie Charging Station</td>\n",
              "      <td>-36.369848</td>\n",
              "      <td>145.361899</td>\n",
              "      <td>77 Midland Hwy</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>389</th>\n",
              "      <td>Chargefox Charging Station</td>\n",
              "      <td>-35.726720</td>\n",
              "      <td>145.659354</td>\n",
              "      <td>154 Campbell Rd</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>390</th>\n",
              "      <td>Tesla Destination Charger</td>\n",
              "      <td>-36.026226</td>\n",
              "      <td>146.459045</td>\n",
              "      <td>217 Main St</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>unknown</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>391 rows Ã— 19 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                         Location Name   Latitude   Longitude   \n",
              "0                               Gatton -27.551404  152.335073  \\\n",
              "1                               Cairns -16.920457  145.778873   \n",
              "2                          Rockhampton -23.382272  150.513462   \n",
              "3                          Coolangatta -28.164197  153.515274   \n",
              "4                             Hamilton -27.444492  153.083611   \n",
              "..                                 ...        ...         ...   \n",
              "386  Electric Vehicle Charging Station -36.385785  145.396965   \n",
              "387              Evie Charging Station -35.940484  144.725516   \n",
              "388              Evie Charging Station -36.369848  145.361899   \n",
              "389         Chargefox Charging Station -35.726720  145.659354   \n",
              "390          Tesla Destination Charger -36.026226  146.459045   \n",
              "\n",
              "                                               Address  Plugs_wall_AU/NZ   \n",
              "0    Building 8156, The University of Queensland, M...               1.0  \\\n",
              "1     1 Pier Point Rd, Cairns City QLD 4870, Australia               0.0   \n",
              "2    172-189 Alma St, Rockhampton City QLD 4700, Au...               0.0   \n",
              "3                          1 Eastern Ave, Bilinga 4225               0.0   \n",
              "4    North Shore Hamilton\\n281 MacArthur Ave, Hamil...               0.0   \n",
              "..                                                 ...               ...   \n",
              "386                                     530 Wyndham St               0.0   \n",
              "387                                        438 High St               0.0   \n",
              "388                                     77 Midland Hwy               0.0   \n",
              "389                                    154 Campbell Rd               0.0   \n",
              "390                                        217 Main St               0.0   \n",
              "\n",
              "     Plugs_CHAdeMO  Plugs_CCS/SAE  Plugs_Tesla Plugs_J-1772  Plugs_Type2   \n",
              "0              1.0            1.0          1.0            0          0.0  \\\n",
              "1              1.0            1.0          0.0            0          2.0   \n",
              "2              1.0            1.0          0.0            0          2.0   \n",
              "3              1.0            1.0          0.0            0          2.0   \n",
              "4              2.0            2.0          0.0            0          2.0   \n",
              "..             ...            ...          ...          ...          ...   \n",
              "386            0.0            0.0          0.0            0          1.0   \n",
              "387            1.0            1.0          0.0            0          0.0   \n",
              "388            1.0            1.0          0.0            0          0.0   \n",
              "389            0.0            0.0          0.0            0          1.0   \n",
              "390            0.0            0.0          1.0            0          0.0   \n",
              "\n",
              "     Power 1  Power 2  charging_stations  payment  Plugs_Caravan_Mains_Socket   \n",
              "0       50.0     22.0                4.0      0.2                         0.0  \\\n",
              "1       50.0     22.0                3.0      0.3                         0.0   \n",
              "2       50.0     22.0                3.0      0.2                         0.0   \n",
              "3       50.0     22.0                3.0      0.3                         0.0   \n",
              "4       50.0     22.0                5.0      0.3                         0.0   \n",
              "..       ...      ...                ...      ...                         ...   \n",
              "386     22.0     22.0                NaN  unknown                         0.0   \n",
              "387     22.0     22.0                NaN  unknown                         0.0   \n",
              "388     22.0     22.0                NaN  unknown                         0.0   \n",
              "389     22.0     22.0                NaN  unknown                         0.0   \n",
              "390     22.0     22.0                NaN  unknown                         0.0   \n",
              "\n",
              "     Plugs_Three_Phase  Plugs_Commando  Plugs_Other  wait_time  \n",
              "0                  0.0             0.0          0.0   3.333333  \n",
              "1                  0.0             0.0          0.0   2.500000  \n",
              "2                  0.0             0.0          0.0   2.500000  \n",
              "3                  0.0             0.0          0.0   2.500000  \n",
              "4                  0.0             0.0          0.0   4.166667  \n",
              "..                 ...             ...          ...        ...  \n",
              "386                0.0             0.0          0.0        NaN  \n",
              "387                0.0             0.0          0.0        NaN  \n",
              "388                0.0             0.0          0.0        NaN  \n",
              "389                0.0             0.0          0.0        NaN  \n",
              "390                0.0             0.0          0.0        NaN  \n",
              "\n",
              "[391 rows x 19 columns]"
            ]
          },
          "execution_count": 19,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "1600f159",
      "metadata": {
        "id": "1600f159"
      },
      "source": [
        "#### 2.7 Calculate descriptive statistics for wait time"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2c1b1b65",
      "metadata": {
        "id": "2c1b1b65",
        "outputId": "f3a144d2-b50e-41e2-ec0c-51c28773e70f"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "count    317.000000\n",
              "mean       2.284259\n",
              "std        6.630315\n",
              "min        0.366667\n",
              "25%        0.366667\n",
              "50%        0.733333\n",
              "75%        1.466667\n",
              "max       64.166667\n",
              "Name: wait_time, dtype: float64"
            ]
          },
          "execution_count": 20,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "\n",
        "df['wait_time'].describe()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "7e5f7917",
      "metadata": {
        "id": "7e5f7917"
      },
      "source": [
        "#### 2.8 Plot a histogram of wait time\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d401ca12",
      "metadata": {
        "id": "d401ca12",
        "outputId": "9e009811-8b02-4607-976a-e1460aae47c9"
      },
      "outputs": [
        {
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjsAAAGyCAYAAAACgQXWAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAxqElEQVR4nO3df1TVVb7/8deJX6khiQoHRkQm0VLIcaRM+oGkolZW1pqsplHTZmX+SK54naw7V7qVaF7RZrzZLxdoTlkzV5tmaSmlYOb1pqT5oyktUdEg0giQ9KC4v3/09dyOgNnx4Dluno+1Pmv87L3PPu/PluQ1nx/nOIwxRgAAAJa6xN8FAAAANCfCDgAAsBphBwAAWI2wAwAArEbYAQAAViPsAAAAqxF2AACA1Qg7AADAaoQdAABgtWB/FxAITp06pa+++krh4eFyOBz+LgcAAJwDY4xqamoUGxurSy45y/kb40fPP/+8SU5ONuHh4SY8PNxcd911ZtWqVe7+U6dOmRkzZpiYmBhz6aWXmrS0NLNz506POY4fP24mTpxo2rdvb1q3bm2GDRtmSktLf1YdpaWlRhIbGxsbGxvbRbj91O99hzH++26sf/zjHwoKClLXrl0lSYsXL9acOXO0detW9ezZU7Nnz9Yzzzyj/Px8devWTU8//bTWr1+vzz//XOHh4ZKkRx55RP/4xz+Un5+v9u3bKysrS99++62Ki4sVFBR0TnVUVVXp8ssvV2lpqdq2bdtsxwsAAHynurpacXFx+u677xQREdHkOL+GncZERkZqzpw5GjNmjGJjY5WZmak//OEPkiSXy6Xo6GjNnj1bDz/8sKqqqtSxY0e9+uqrGjFihCTpq6++UlxcnFatWqXBgwef03tWV1crIiJCVVVVhB0AAC4S5/r7O2BuUK6vr9eyZctUW1urfv36qaSkROXl5crIyHCPCQsLU1pamjZu3ChJKi4u1okTJzzGxMbGKikpyT2mMS6XS9XV1R4bAACwk9/Dzo4dO3TZZZcpLCxM48aN04oVK9SjRw+Vl5dLkqKjoz3GR0dHu/vKy8sVGhqqdu3aNTmmMTk5OYqIiHBvcXFxPj4qAAAQKPwedrp3765t27Zp06ZNeuSRRzRq1Ch9+umn7v4zn44yxvzkE1M/NWb69Omqqqpyb6Wlped3EAAAIGD5PeyEhoaqa9euSklJUU5Ojnr16qXnnntOTqdTkhqcoamoqHCf7XE6naqrq1NlZWWTYxoTFhamtm3bemwAAMBOfg87ZzLGyOVyKSEhQU6nUwUFBe6+uro6FRUVKTU1VZLUp08fhYSEeIwpKyvTzp073WMAAEDL5tcPFXz88cc1dOhQxcXFqaamRsuWLVNhYaHeffddORwOZWZmaubMmUpMTFRiYqJmzpyp1q1b6/7775ckRUREaOzYscrKylL79u0VGRmpqVOnKjk5WQMHDvTnoQEAgADh17Dz9ddf63e/+53KysoUERGhq6++Wu+++64GDRokSZo2bZqOHTum8ePHq7KyUn379tWaNWvcn7EjSfPmzVNwcLDuueceHTt2TAMGDFB+fv45f8YOAACwW8B9zo4/8Dk7AABcfC66z9kBAABoDoQdAABgNcIOAACwGmEHAABYjbADAACsRtgBAABWI+wAAACr+fVDBVuCLo+tbLa59826tdnmBgDAFpzZAQAAViPsAAAAqxF2AACA1Qg7AADAaoQdAABgNcIOAACwGmEHAABYjbADAACsRtgBAABWI+wAAACrEXYAAIDVCDsAAMBqhB0AAGA1wg4AALAaYQcAAFiNsAMAAKxG2AEAAFYj7AAAAKsRdgAAgNUIOwAAwGqEHQAAYDXCDgAAsBphBwAAWI2wAwAArEbYAQAAViPsAAAAqxF2AACA1Qg7AADAaoQdAABgNcIOAACwGmEHAABYjbADAACsRtgBAABWI+wAAACrEXYAAIDVCDsAAMBqhB0AAGA1wg4AALAaYQcAAFiNsAMAAKxG2AEAAFYj7AAAAKv5Nezk5OTommuuUXh4uKKionTnnXfq888/9xgzevRoORwOj+26667zGONyuTRp0iR16NBBbdq00e23366DBw9eyEMBAAAByq9hp6ioSBMmTNCmTZtUUFCgkydPKiMjQ7W1tR7jhgwZorKyMve2atUqj/7MzEytWLFCy5Yt04YNG3T06FHddtttqq+vv5CHAwAAAlCwP9/83Xff9djPy8tTVFSUiouLddNNN7nbw8LC5HQ6G52jqqpKixYt0quvvqqBAwdKkpYuXaq4uDi99957Gjx4cPMdAAAACHgBdc9OVVWVJCkyMtKjvbCwUFFRUerWrZt+//vfq6Kiwt1XXFysEydOKCMjw90WGxurpKQkbdy4sdH3cblcqq6u9tgAAICdAibsGGM0ZcoU3XDDDUpKSnK3Dx06VH/5y1+0du1azZ07V5s3b9bNN98sl8slSSovL1doaKjatWvnMV90dLTKy8sbfa+cnBxFRES4t7i4uOY7MAAA4Fd+vYz1YxMnTtT27du1YcMGj/YRI0a4/5yUlKSUlBTFx8dr5cqVuuuuu5qczxgjh8PRaN/06dM1ZcoU9351dTWBBwAASwXEmZ1Jkybp7bff1rp169SpU6ezjo2JiVF8fLz27NkjSXI6naqrq1NlZaXHuIqKCkVHRzc6R1hYmNq2beuxAQAAO/k17BhjNHHiRC1fvlxr165VQkLCT77myJEjKi0tVUxMjCSpT58+CgkJUUFBgXtMWVmZdu7cqdTU1GarHQAAXBz8ehlrwoQJeu211/T3v/9d4eHh7ntsIiIi1KpVKx09elTZ2dm6++67FRMTo3379unxxx9Xhw4dNHz4cPfYsWPHKisrS+3bt1dkZKSmTp2q5ORk99NZAACg5fJr2Fm4cKEkqX///h7teXl5Gj16tIKCgrRjxw4tWbJE3333nWJiYpSenq433nhD4eHh7vHz5s1TcHCw7rnnHh07dkwDBgxQfn6+goKCLuThAACAAOQwxhh/F+Fv1dXVioiIUFVVlc/v3+ny2Eqfzvdj+2bd2mxzAwAQ6M7193dA3KAMAADQXAg7AADAaoQdAABgNcIOAACwGmEHAABYjbADAACsRtgBAABWI+wAAACrEXYAAIDVCDsAAMBqhB0AAGA1wg4AALAaYQcAAFiNsAMAAKxG2AEAAFYj7AAAAKsRdgAAgNUIOwAAwGqEHQAAYDXCDgAAsBphBwAAWI2wAwAArEbYAQAAViPsAAAAqxF2AACA1Qg7AADAaoQdAABgNcIOAACwGmEHAABYjbADAACsRtgBAABWI+wAAACrEXYAAIDVCDsAAMBqhB0AAGA1wg4AALAaYQcAAFiNsAMAAKxG2AEAAFYj7AAAAKsRdgAAgNUIOwAAwGqEHQAAYDXCDgAAsBphBwAAWI2wAwAArEbYAQAAViPsAAAAqxF2AACA1Qg7AADAan4NOzk5ObrmmmsUHh6uqKgo3Xnnnfr88889xhhjlJ2drdjYWLVq1Ur9+/fXrl27PMa4XC5NmjRJHTp0UJs2bXT77bfr4MGDF/JQAABAgPJr2CkqKtKECRO0adMmFRQU6OTJk8rIyFBtba17zLPPPqvc3FwtWLBAmzdvltPp1KBBg1RTU+Mek5mZqRUrVmjZsmXasGGDjh49qttuu0319fX+OCwAABBAHMYY4+8iTvvmm28UFRWloqIi3XTTTTLGKDY2VpmZmfrDH/4g6YezONHR0Zo9e7YefvhhVVVVqWPHjnr11Vc1YsQISdJXX32luLg4rVq1SoMHD/7J962urlZERISqqqrUtm1bnx5Tl8dW+nS+H9s369ZmmxsAgEB3rr+/A+qenaqqKklSZGSkJKmkpETl5eXKyMhwjwkLC1NaWpo2btwoSSouLtaJEyc8xsTGxiopKck95kwul0vV1dUeGwAAsFPAhB1jjKZMmaIbbrhBSUlJkqTy8nJJUnR0tMfY6Ohod195eblCQ0PVrl27JsecKScnRxEREe4tLi7O14cDAAACRMCEnYkTJ2r79u16/fXXG/Q5HA6PfWNMg7YznW3M9OnTVVVV5d5KS0u9LxwAAAS0gAg7kyZN0ttvv61169apU6dO7nan0ylJDc7QVFRUuM/2OJ1O1dXVqbKysskxZwoLC1Pbtm09NgAAYCe/hh1jjCZOnKjly5dr7dq1SkhI8OhPSEiQ0+lUQUGBu62urk5FRUVKTU2VJPXp00chISEeY8rKyrRz5073GAAA0HIF+/PNJ0yYoNdee01///vfFR4e7j6DExERoVatWsnhcCgzM1MzZ85UYmKiEhMTNXPmTLVu3Vr333+/e+zYsWOVlZWl9u3bKzIyUlOnTlVycrIGDhzoz8MDAAABwK9hZ+HChZKk/v37e7Tn5eVp9OjRkqRp06bp2LFjGj9+vCorK9W3b1+tWbNG4eHh7vHz5s1TcHCw7rnnHh07dkwDBgxQfn6+goKCLtShAACAABVQn7PjL3zODgAAF5+L8nN2AAAAfI2wAwAArEbYAQAAViPsAAAAqxF2AACA1Qg7AADAaoQdAABgNcIOAACwGmEHAABYjbADAACsRtgBAABWI+wAAACrEXYAAIDVCDsAAMBqhB0AAGA1wg4AALAaYQcAAFiNsAMAAKxG2AEAAFbzKuyUlJT4ug4AAIBm4VXY6dq1q9LT07V06VIdP37c1zUBAAD4jFdh55NPPlHv3r2VlZUlp9Ophx9+WB999JGvawMAADhvXoWdpKQk5ebm6tChQ8rLy1N5ebluuOEG9ezZU7m5ufrmm298XScAAIBXzusG5eDgYA0fPlxvvvmmZs+erS+//FJTp05Vp06dNHLkSJWVlfmqTgAAAK+cV9jZsmWLxo8fr5iYGOXm5mrq1Kn68ssvtXbtWh06dEh33HGHr+oEAADwSrA3L8rNzVVeXp4+//xz3XLLLVqyZIluueUWXXLJD9kpISFBL774oq688kqfFgsAAPBzeRV2Fi5cqDFjxujBBx+U0+lsdEznzp21aNGi8yoOAADgfHkVdvbs2fOTY0JDQzVq1ChvpgcAAPAZr+7ZycvL01//+tcG7X/961+1ePHi8y4KAADAV7wKO7NmzVKHDh0atEdFRWnmzJnnXRQAAICveBV29u/fr4SEhAbt8fHxOnDgwHkXBQAA4CtehZ2oqCht3769Qfsnn3yi9u3bn3dRAAAAvuJV2Ln33nv16KOPat26daqvr1d9fb3Wrl2ryZMn69577/V1jQAAAF7z6mmsp59+Wvv379eAAQMUHPzDFKdOndLIkSO5ZwcAAAQUr8JOaGio3njjDT311FP65JNP1KpVKyUnJys+Pt7X9QEAAJwXr8LOad26dVO3bt18VQsAAIDPeRV26uvrlZ+fr/fff18VFRU6deqUR//atWt9UhwAAMD58irsTJ48Wfn5+br11luVlJQkh8Ph67oAAAB8wquws2zZMr355pu65ZZbfF0PAACAT3n16HloaKi6du3q61oAAAB8zquwk5WVpeeee07GGF/XAwAA4FNeXcbasGGD1q1bp3feeUc9e/ZUSEiIR//y5ct9UhwAAMD58irsXH755Ro+fLivawEAAPA5r8JOXl6er+sAAABoFl7dsyNJJ0+e1HvvvacXX3xRNTU1kqSvvvpKR48e9VlxAAAA58urMzv79+/XkCFDdODAAblcLg0aNEjh4eF69tlndfz4cb3wwgu+rhMAAMArXp3ZmTx5slJSUlRZWalWrVq524cPH67333/fZ8UBAACcL6+fxvrwww8VGhrq0R4fH69Dhw75pDAAAABf8OrMzqlTp1RfX9+g/eDBgwoPDz/vogAAAHzFq7AzaNAgzZ8/373vcDh09OhRzZgxg6+QAAAAAcWrsDNv3jwVFRWpR48eOn78uO6//3516dJFhw4d0uzZs895nvXr12vYsGGKjY2Vw+HQW2+95dE/evRoORwOj+26667zGONyuTRp0iR16NBBbdq00e23366D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wkJ17txZv/zlLyVJW7duVXZ2trZt26Zvv/1Wp06dkiQdOHBAPXr0uCB1X3311e4/R0dHS/rh5toft52+tPbNN9+otLRUY8eO1e9//3v3mJMnT7pvom7MsWPHdOmll57T+7du3dq9PqfbPvroo3M+BofDIafT6XE50Bsff/yxjDEN7q1yuVxq3769JOnRRx/VI488ojVr1mjgwIG6++67PWqRpFatWnlchgNaCsIOYKGuXbuqU6dOWrdunSorK5WWlibph5uCExIS9OGHH2rdunW6+eabJUm1tbXKyMhQRkaGli5dqo4dO+rAgQMaPHiw6urqLljdISEh7j+fvhH6zLbTIez0/7788svq27evxzxBQUFNvkeHDh1UWVl5Tu//4/0z3/9cjuHM11xyyQ93Dhhj3P0nTpw463zSD8caFBSk4uLiBsd2+lLVQw89pMGDB2vlypVas2aNcnJyNHfuXE2aNMk99ttvv9UVV1zxk+8H2IZ7dgBLpaenq7CwUIWFherfv7+7PS0tTatXr9amTZvc9+t89tlnOnz4sGbNmqUbb7xRV1555U+ejQgNDT2nJ3vOddzPFR0drV/84hfau3evunbt6rElJCQ0+brevXvr008/9Xk956Jjx46Sfnjs/rRt27Z5jGlsvXr37q36+npVVFQ0OFan0+keFxcXp3Hjxmn58uXKysrSyy+/7DHPzp071bt3bx8fFRD4CDuApdLT07VhwwZt27bNfWZH+iHsvPzyyzp+/Lg77HTu3FmhoaH685//rL179+rtt9/+yc+P6dKli44ePar3339fhw8fbvLySJcuXVRSUqJt27bp8OHDcrlcPjvG7Oxs5eTk6LnnntPu3bu1Y8cO5eXlKTc3t8nXDB48WLt27Wry7E5z6tq1q+Li4pSdna3du3dr5cqVmjt3rseYxta1W7du+u1vf6uRI0dq+fLlKikp0ebNmzV79mz3E1eZmZlavXq1SkpK9PHHH2vt2rW66qqr3PPu27dPhw4d0sCBAy/oMQOBgLADWCo9PV3Hjh1T165d3fe/SD+EnZqaGl1xxRWKi4uT9MMZh/z8fP31r39Vjx49NGvWLP3nf/7nWedPTU3VuHHjNGLECHXs2FHPPvtso+PuvvtuDRkyROnp6erYsaNef/11nx3jQw89pFdeeUX5+flKTk5WWlqa8vPzz3pmJzk5WSkpKXrzzTd9Vse5CgkJ0euvv67PPvtMvXr10uzZs/X00097jGlqXfPy8jRy5EhlZWWpe/fuuv322/W///u/7r/D+vp6TZgwQVdddZWGDBmi7t27ezyG//rrrysjI0Px8fEX7oCBAOEwP754DAAtwKpVqzR16lTt3LnTfR+NzVwulxITE/X666/r+uuv93c5wAXHDcoAWpxbbrlFe/bs0aFDh9xnRmy2f/9+PfHEEwQdtFic2QEAAFaz//wtAABo0Qg7AADAaoQdAABgNcIOAACwGmEHAABYjbADAACsRtgBAABWI+wAAACrEXYAAIDV/h8+hjDa/ZKBogAAAABJRU5ErkJggg==",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.hist(df['wait_time'], bins=20)\n",
        "plt.xlabel('Wait time (minutes)')\n",
        "plt.ylabel('Frequency')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3d69e68d",
      "metadata": {
        "id": "3d69e68d"
      },
      "source": [
        "#### 2.9  plot the distribution of the number of ports per charging station."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8d00518b",
      "metadata": {
        "id": "8d00518b",
        "outputId": "30d81db5-c3da-4fcb-8e21-a8218bd5811d"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.histplot(data=df, x='charging_stations', bins=18)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ab8d142d",
      "metadata": {
        "id": "ab8d142d"
      },
      "source": [
        "#### 2.9 Bi-variate analysis:\n",
        "plotting the relationship between latitude and longitude."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "d5089440",
      "metadata": {
        "id": "d5089440",
        "outputId": "27e6793a-79e6-415c-d9c3-83cba10ec152"
      },
      "outputs": [
        {
          "data": {
            "image/png": "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owAAQP8QzBXF+1KP1kHKzMyUyWSSyWTSCSec4BOS2traVF9frx//+MdBbyQAAIhOoVzkMpR6tA7S008/LbfbrYULF+qhhx7y2WrEYrFo5MiRmjRpUkga2ld4ig0AgODzrIMUqu1KwvYUmyTv9iL5+fmaPHmyzObInDcEAACRJdq2K+lRQPI488wzvX9ubGxUS4tvBTojLwAAIJr1qkjb4XBo8eLFGjJkiFJSUpSZmenzAgAAiGa9Cki33HKLNm3apEcffVTx8fF64okntHLlSuXk5OiZZ54JdhsBAAD6VK+m2F555RU988wzOuuss7Rw4UJNnTpVBQUFGjFihJ599ln98Ic/DHY7AQAA+kyvRpCOHDni3Y8tLS1NR44ckSQVFxdr8+bNwWsdAABAGPQqIB1//PHat2+fJGns2LF6/vnnJR0dWWr/6D8AAEA06lVAWrBggT755BNJ0m233eatRbrhhht06623BrWBAAAAfa1XNUg33HCD98/Tp0/Xrl279OGHH2rw4MFau3Zt0BoHAAAQDj1aSbs7n3zyiU499VS1tbUF6yP7HCtpAwAQfYJ9/+7VFBsAAEB/RkACAAAwICABAAAY9KhIe/bs2V2er62tDaQtAAAAEaFHAam7NY7S09N15ZVXBtQgAACAcOtRQOIRfgAAMBBQgwQAAGBAQAIAADAgIAEAABhETUC65JJLlJeXp4SEBA0bNkzz5s1TZWWlzzXl5eW6+OKLlZycLKvVqiVLlsjpdIapxQAAIFpFTUCaPn26nn/+ee3evVvr169XWVmZvvvd73rPt7W16cILL1RDQ4O2bt2qdevWaf369brpppvC2GoAABCNgroXW196+eWXNWvWLDU3N8tsNutvf/ubLrroIlVUVCgnJ0eStG7dOl111VWqqqrye18W9mIDACD6sBebpCNHjujZZ5/V5MmTZTabJUnvvfeexo0b5w1HknT++eerublZH3300TE/q7m5WXa73ecFAAAGtqgKSEuXLlVycrKysrJUXl6ul156yXvu4MGDys7O9rk+MzNTFotFBw8ePOZn3nvvvUpPT/e+cnNzQ9Z+AAAQHcIakFasWCGTydTl68MPP/Ref8stt6ikpESvv/66YmNjdeWVV6r9DKHJZOrwO9xud6fHPW677TbZbDbvq6KiIrhfEgAARJ0eraQdbIsXL9YVV1zR5TUj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XPf0008rOTlZ27dv1y9/+UutWrXKG0xcLpdmzZqlpKQkbd++XY8//rhuv/32Y/7O3NxcrV+/XpK0e/duHThwQL/5zW/8aq/L5dLs2bMVGxurf/7zn3rssce0dOlSn2scDoemT5+ulJQUbd68WVu3blVKSopmzpwpp9PZk+4BECZMsQEIq0cffVS5ubl65JFHZDKZNGbMGFVWVmrp0qW68847FRNz9P/jJkyYoOXLl0uSCgsL9cgjj+itt97Seeedp9dff11lZWV65513vNNod999t84777xOf2dsbKwGDRokSRoyZIgyMjL8bu+bb76pzz77TPv27dNxxx0nSbrnnnt0wQUXeK9Zt26dYmJi9MQTT8hkMkmS1q5dq4yMDL3zzjuaMWNGzzoJQJ8jIAEIq88++0yTJk3yBglJmjJliurr67V//37l5eVJOhqQ2hs2bJiqqqokHR0Fys3N9akxOuOMM0LW3ry8PG84kqRJkyb5XPPRRx+ptLRUqampPsebmppUVlYWknYBCC4CEoCwcrvdPuHIc0ySz3Gz2exzjclkksvlOuZn9FZMTIz393u0tLR0aJuxLe25XC5NnDhRzz77bIdrBw8eHJR2AggtAhKAsBo7dqzWr1/vE3L+8Y9/KDU1VcOHD/frM8aMGaPy8nIdOnRI2dnZkqQPPvigy/dYLBZJUltbm8/xwYMH68CBA96f7Xa79u7d69Pe8vJyVVZWKicnR5L03nvv+XzGqaeeqj/96U8aMmSI0tLS/PoOACILRdoA+ozNZtPHH3/s87r22mtVUVGh66+/Xrt27dJLL72k5cuX68Ybb/TWH3XnvPPO06hRozR//nzt2LFD27Zt8xZpH2tkacSIETKZTHr11Vf19ddfq76+XpJ09tln649//KO2bNminTt3av78+YqNjfW+79xzz9Xo0aN15ZVX6pNPPtGWLVs6FIT/8Ic/lNVq1aWXXqotW7Zo7969evfdd/XTn/5U+/fv703XAehjBCQAfeadd95RUVGRz2v58uX661//qvfff18nn3yyfvzjH2vRokW64447/P7c2NhYbdy4UfX19Tr99NN19dVXe9+fkJDQ6XuGDx+ulStXatmyZcrOztbixYslSbfddpumTZumiy66SN/5znc0a9YsjRo1yvu+mJgYbdiwQc3NzTrjjDN09dVX6+677/b57KSkJG3evFl5eXmaPXu2TjzxRC1cuFCNjY2MKAFRwuTubEIdAKLctm3bVFxcrNLSUp+AAwD+ICAB6Bc2bNiglJQUFRYWqrS0VD/96U+VmZmprVu3hrtpAKIQRdoA+oW6ujrdeuutqqiokNVq1bnnnqsHH3ww3M0CEKUYQQIAADCgSBsAAMCAgAQAAGBAQAIAADAgIAEAABgQkAAAAAwISAAAAAYEJAAAAAMCEgAAgMH/D14zmEAoZVinAAAAAElFTkSuQmCC",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.scatterplot(data=df, x='Longitude', y='Latitude')\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f8ec9b6a",
      "metadata": {
        "id": "f8ec9b6a"
      },
      "source": [
        "#### 3.0 Heatmaps:\n",
        "visualizing the density of charging stations across Australia"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6cfb9bbf",
      "metadata": {
        "id": "6cfb9bbf",
        "outputId": "69043304-0dc6-4b03-cbe2-a0bed16c9a4e"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.kdeplot(data=df, x='Longitude', y='Latitude', fill=True, cmap='mako', levels=30)\n",
        "plt.show()\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3ec8932a",
      "metadata": {
        "id": "3ec8932a"
      },
      "source": [
        "#### 3.1 distribution of charging_stations and the wait_time."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "10a6256c",
      "metadata": {
        "id": "10a6256c",
        "outputId": "9c1362a7-a82f-45ae-cd81-0f3d6f3ed0e2"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7f23daa01390>"
            ]
          },
          "execution_count": 25,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "sns.catplot(x=\"charging_stations\", y=\"wait_time\", kind=\"boxen\",data=df)\n",
        "sns.catplot(y=\"wait_time\",x=\"charging_stations\",kind = \"violin\", data=df)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c2079889",
      "metadata": {
        "id": "c2079889"
      },
      "source": [
        "### Data modelling\n",
        "\n",
        "#### 3.2 Viewing existing columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "c2bc36fb",
      "metadata": {
        "id": "c2bc36fb",
        "outputId": "6ed8003e-149c-4784-e114-ffb8fc3ca570"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['Location Name', 'Latitude', 'Longitude', 'Address', 'Plugs_wall_AU/NZ',\n",
              "       'Plugs_CHAdeMO', 'Plugs_CCS/SAE', 'Plugs_Tesla', 'Plugs_J-1772',\n",
              "       'Plugs_Type2', 'Power 1', 'Power 2', 'charging_stations', 'payment',\n",
              "       'Plugs_Caravan_Mains_Socket', 'Plugs_Three_Phase', 'Plugs_Commando',\n",
              "       'Plugs_Other', 'wait_time'],\n",
              "      dtype='object')"
            ]
          },
          "execution_count": 26,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df.columns"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "90e78dcc",
      "metadata": {
        "id": "90e78dcc"
      },
      "source": [
        "#### 3.3 Defining the target variable"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7ff37613",
      "metadata": {
        "id": "7ff37613"
      },
      "outputs": [],
      "source": [
        "target = \"wait_time\""
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b66c2b1a",
      "metadata": {
        "id": "b66c2b1a"
      },
      "source": [
        "##### 3.4 Perform one-hot encoding on categorical variables"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "72dfb370",
      "metadata": {
        "id": "72dfb370"
      },
      "outputs": [],
      "source": [
        "df_encoded = pd.get_dummies(df)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "8826ba71",
      "metadata": {
        "id": "8826ba71"
      },
      "source": [
        "#### 3.5 Splitting the data into training and testing sets"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "14280b20",
      "metadata": {
        "id": "14280b20"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(df_encoded.drop(target, axis=1), df_encoded[target], test_size=0.2, random_state=42)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "dfc529da",
      "metadata": {
        "id": "dfc529da"
      },
      "source": [
        "#### 3.6 Impute missing values in the training set\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f4fd8ccd",
      "metadata": {
        "id": "f4fd8ccd"
      },
      "outputs": [],
      "source": [
        "imputer = SimpleImputer(strategy='mean')\n",
        "X_train = imputer.fit_transform(X_train)\n",
        "y_train = imputer.fit_transform(y_train.reshape(-1, 1))\n",
        "y_train = y_train.ravel()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "59c8e7b5",
      "metadata": {
        "id": "59c8e7b5"
      },
      "source": [
        "#### 3.7 Fitting Random Forest Regressor model for prediction"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8cf44170",
      "metadata": {
        "id": "8cf44170",
        "outputId": "6b77af78-8dd8-47df-9e84-905cc6e80d35"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<style>#sk-container-id-10 {color: black;background-color: white;}#sk-container-id-10 pre{padding: 0;}#sk-container-id-10 div.sk-toggleable {background-color: white;}#sk-container-id-10 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-10 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-10 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-10 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-10 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-10 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-10 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-10 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-10 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-10 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-10 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-10 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-10 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-10 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-10 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-10 div.sk-item {position: relative;z-index: 1;}#sk-container-id-10 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-10 div.sk-item::before, #sk-container-id-10 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-10 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-10 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-10 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-10 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-10 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-10 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-10 div.sk-label-container {text-align: center;}#sk-container-id-10 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-10 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-10\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" checked><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"
            ],
            "text/plain": [
              "RandomForestRegressor(random_state=42)"
            ]
          },
          "execution_count": 161,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "rf = RandomForestRegressor(n_estimators=100, random_state=42)\n",
        "rf.fit(X_train, y_train)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c04420ac",
      "metadata": {
        "id": "c04420ac"
      },
      "source": [
        "#### 3.8 Impute missing values in the testing set"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "34b255e8",
      "metadata": {
        "id": "34b255e8"
      },
      "outputs": [],
      "source": [
        "imputer = SimpleImputer(strategy='mean')\n",
        "X_test = imputer.fit_transform(X_test)\n",
        "y_test = imputer.fit_transform(np.array(y_test).reshape(-1, 1))\n",
        "y_test = y_test.ravel()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "2efbaa73",
      "metadata": {
        "id": "2efbaa73"
      },
      "source": [
        "#### 3.9 Evaluate the Random Forest model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "2c4ccc3e",
      "metadata": {
        "id": "2c4ccc3e",
        "outputId": "216ac5cc-889f-40ea-f15c-966a8e03d1e6"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Random Forest:\n",
            "MSE = 7.67\n",
            "R2 = 0.85\n"
          ]
        }
      ],
      "source": [
        "y_pred_rf = rf.predict(X_test)\n",
        "mse_rf = mean_squared_error(y_test, y_pred_rf)\n",
        "r2_rf = r2_score(y_test, y_pred_rf)\n",
        "print(f\"Random Forest:\\nMSE = {mse_rf:.2f}\\nR2 = {r2_rf:.2f}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d15922ac",
      "metadata": {
        "id": "d15922ac"
      },
      "source": [
        "#### 4.0 Building an XGBoost model for prediction"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4af55ad1",
      "metadata": {
        "id": "4af55ad1",
        "outputId": "4fbce829-a251-4559-ef90-3ce6898df74c"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<style>#sk-container-id-11 {color: black;background-color: white;}#sk-container-id-11 pre{padding: 0;}#sk-container-id-11 div.sk-toggleable {background-color: white;}#sk-container-id-11 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-11 label.sk-toggleable__label-arrow:before {content: \"â–¸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-11 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-11 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-11 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-11 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-11 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-11 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"â–¾\";}#sk-container-id-11 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-11 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-11 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-11 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-11 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-11 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-11 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-11 div.sk-item {position: relative;z-index: 1;}#sk-container-id-11 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-11 div.sk-item::before, #sk-container-id-11 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-11 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-11 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-11 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-11 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-11 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-11 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-11 div.sk-label-container {text-align: center;}#sk-container-id-11 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-11 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-11\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             n_estimators=100, n_jobs=None, num_parallel_tree=None,\n",
              "             predictor=None, random_state=42, ...)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" checked><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBRegressor</label><div class=\"sk-toggleable__content\"><pre>XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             n_estimators=100, n_jobs=None, num_parallel_tree=None,\n",
              "             predictor=None, random_state=42, ...)</pre></div></div></div></div></div>"
            ],
            "text/plain": [
              "XGBRegressor(base_score=None, booster=None, callbacks=None,\n",
              "             colsample_bylevel=None, colsample_bynode=None,\n",
              "             colsample_bytree=None, early_stopping_rounds=None,\n",
              "             enable_categorical=False, eval_metric=None, feature_types=None,\n",
              "             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,\n",
              "             interaction_constraints=None, learning_rate=None, max_bin=None,\n",
              "             max_cat_threshold=None, max_cat_to_onehot=None,\n",
              "             max_delta_step=None, max_depth=None, max_leaves=None,\n",
              "             min_child_weight=None, missing=nan, monotone_constraints=None,\n",
              "             n_estimators=100, n_jobs=None, num_parallel_tree=None,\n",
              "             predictor=None, random_state=42, ...)"
            ]
          },
          "execution_count": 165,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "xgb = XGBRegressor(n_estimators=100, random_state=42)\n",
        "xgb.fit(X_train, y_train)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "37560fba",
      "metadata": {
        "id": "37560fba"
      },
      "source": [
        "#### 4.1 Evaluate the XGBoost model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6a9c3c1c",
      "metadata": {
        "id": "6a9c3c1c",
        "outputId": "74fd98ce-76f6-4007-fc8e-a200dad67141"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "XGBoost:\n",
            "MSE = 12.84\n",
            "R2 = 0.75\n"
          ]
        }
      ],
      "source": [
        "y_pred_xgb = xgb.predict(X_test)\n",
        "mse_xgb = mean_squared_error(y_test, y_pred_xgb)\n",
        "r2_xgb = r2_score(y_test, y_pred_xgb)\n",
        "print(f\"XGBoost:\\nMSE = {mse_xgb:.2f}\\nR2 = {r2_xgb:.2f}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b667c5c3",
      "metadata": {
        "id": "b667c5c3"
      },
      "source": [
        "### Overall remarks\n",
        "\n",
        "\n",
        "Both Random Forest model and XGBoost Model has performed well in predicting the wait_time which shows  lower MSE and high R2."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3578fb66",
      "metadata": {
        "id": "3578fb66"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.8.10"
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
